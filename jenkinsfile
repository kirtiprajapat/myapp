// pipeline {
//     agent any 
//     environment{
//         NODE_ENV = 'production'
//     }

//     stages {
//         stage('Clone repository') {
//             steps {
//                 echo 'cloning repository...'
//                 git 'https://github.com/kirtiprajapat/myapp.git'
//             }
//         }
//         stage('Install dependencies'){
//             steps{
//                 echo 'installing dependenciesv ..'
//                 sh 'npm install'
//                 sh 'npm install --save-dev nodemon'
//             }
//         }
        
//         stage('start server with nodemon'){
//             steps{
//                 echo 'starting server with nodemon...'
//                 sh 'npx nodemon app.js'
                
//             }
//         }
//     }
// }

pipeline {
    agent any
 
    environment {
        NODE_ENV = 'production'
    }
 
    stages {
        stage('Clone repository') {
            steps {
                echo 'Cloning repository...'
git 'https://github.com/kirtiprajapat/myapp.git'
            }
        }
 
        stage('Install dependencies') {
            steps {
                echo 'Installing dependencies...'
                sh 'npm install'
                sh 'npm install --save-dev nodemon pm2'  // Install PM2 and nodemon globally if not installed
            }
        }
 
        stage('Start server with PM2') {
            steps {
                echo 'Starting server with PM2...'
 
                // Start the app using PM2 to ensure it keeps running even after code changes
                sh 'pm2 start app.js --name "my-node-app" --watch'
            }
        }
 
        stage('Reload server with PM2') {
            steps {
                echo 'Reloading server with PM2...'
                // This step ensures that changes in the code are reflected in the running server without full restart
                sh 'pm2 reload my-node-app --update-env'
            }
        }
 
        stage('Save PM2 Process') {
            steps {
                echo 'Saving PM2 process list...'
                // Save the PM2 process list so it can be resurrected after server restarts
                sh 'pm2 save'
            }
        }
 
        stage('Check PM2 Status') {
            steps {
                echo 'Checking PM2 status...'
                // Check the PM2 process status to ensure it is running as expected
                sh 'pm2 list'
            }
        }
    }
 
    post {
        always {
            echo 'Cleaning up...'
            // Optionally, stop the server at the end of the pipeline to ensure a clean state for future builds
            sh 'pm2 stop my-node-app || true'
        }
 
        success {
            echo 'Pipeline executed successfully!'
        }
 
        failure {
            echo 'Pipeline execution failed!'
        }
    }
}


